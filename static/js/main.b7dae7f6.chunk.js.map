{"version":3,"sources":["components/babylon/sceneComponent.jsx","components/home/home.js","components/babylon/physworld/collision.js","components/babylon/physworld/physworld.js","img/atom.svg","img/sigma.svg","components/babylon/physworld/buckeye.js","img/osu.svg","components/babylon/grid/grid.js","components/babylon/shapes/ribbon.js","components/babylon/axis/axis.js","components/math/pde/pde_1stO.js","img/pde1.png","components/math/maf2.js","components/header/header2.js","App.js","reportWebVitals.js","index.js"],"names":["props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","useEffect","engine","Engine","current","resize","scene","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","getEngine","window","addEventListener","dispose","removeEventListener","width","innerWidth","height","innerHeight","ref","camera","ArcRotateCamera","Vector3","useAutoRotationBehavior","canvas","getRenderingCanvas","attachControl","clearColor","Color3","enablePhysics","SpotLight","Math","PI","diffuse","environment","createDefaultEnvironment","skyboxSize","ground","position","y","setMainColor","Mesh","CreateBox","scaling","sphere","MeshBuilder","CreateSphere","diameter","segments","alpha","p3","p3mat","StandardMaterial","emissiveColor","material","bakeCurrentTransformIntoVertices","x","sin","z","cos","computeWorldMatrix","trail","TrailMesh","sourceMat","Black","onBeforeRenderObservable","add","ground_worldMatrix","getWorldMatrix","ground_vertexData","getVerticesData","groundNormal","TransformNormal","reflector","Plane","FromPositionAndNormal","scale","mirrorMaterial","reflectionTexture","MirrorTexture","mirrorPlane","renderList","level","alphaMode","ALPHA_ONEONE","physicsImpostor","PhysicsImpostor","BoxImpostor","mass","restitution","id","CANNON","setTarget","Zero","HemisphericLight","gravityVector","skyMaterial","GridMaterial","majorUnitFrequency","minorUnitVisibility","gridRatio","mainColor","lineColor","backFaceCulling","CreateGround","backgroundMaterial","BackgroundMaterial","diffuseTexture","Texture","process","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","diffuseColor","velocity","play","rect1","Rectangle","cornerRadius","color","thickness","background","addControl","linkOffsetY","rect2","sphere1","rotate","SphereImpostor","friction","setLinearVelocity","linkWithMesh","label1","TextBlock","text","getLinearVelocity","_x","bgMat","sphere2","label2","setInterval","toFixed","act","menuButton","Button","CreateSimpleButton","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_BOTTOM","onPointerDownObservable","input","InputText","VERTICAL_ALIGNMENT_TOP","onTextChangedObservable","displayGrid","SelectionPanel","top","left","Collision","sphere2Text","timer","registerOnPhysicsCollide","GridGen","gridData","xStartPoint","xmin","yStartPoint","ymin","zStartPoint","zmin","xRange","xmax","yRange","ymax","zRange","zmax","resolution","xy","i","push","xyGrid","CreateLineSystem","lines","xz","xzGrid","yz","makeRibbon","solution","charCurve","mat","steps","length","s","l","paths","path","j","u","CreateLines","points","ribbon","CreateRibbon","pathArray","sideOrientation","DOUBLESIDE","l2","cCurve","cLine","HighlightLayer","addMesh","Yellow","edgesWidth","Axis","size","makeTextPlane","dynamicTexture","DynamicTexture","hasAlpha","drawText","plane","CreatePlane","specularColor","axisX","xChar","axisY","yChar","axisZ","zChar","console","log","CreateLine","Data","umaxcurve","xinitial","umin","tinitial","xfinal","umax","tfinal","grid","yzGrid","axis","Ribbon","firstO","style","display","useStyles","makeStyles","theme","root","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","container","RecipeReviewCard","classes","React","useState","expanded","setExpanded","className","Card","CardHeader","Avatar","aria-label","title","to","CardMedia","image","pde","CardContent","Typography","variant","component","CardActions","disableSpacing","IconButton","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","drawerWidth","appBar","easing","sharp","leavingScreen","appBarShift","easeOut","enteringScreen","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","useTheme","open","setOpen","CssBaseline","AppBar","Toolbar","edge","Drawer","anchor","paper","direction","Divider","textDecoration","ListItem","button","ListItemIcon","ListItemText","src","Sigma","alt","Atom","BuckeyeLogo","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7dae7f6.chunk.js","sourcesContent":["import { Engine, Scene } from '@babylonjs/core';\nimport React, { useEffect, useRef } from 'react';\n\nimport '../../App.css'\n\nexport default (props) => {\n    const reactCanvas = useRef(null);\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, \n        onRender, onSceneReady, ...rest } = props;\n    \n    useEffect(() =>{\n        \n            const engine = new Engine(reactCanvas.current, antialias,\n                engineOptions, adaptToDeviceRatio);\n            engine.resize();\n            const scene = new Scene(engine, sceneOptions);\n            if(scene.isReady()){\n                props.onSceneReady(scene)\n            }\n            else{\n                scene.onReadyObservable.addOnce(scene => props.\n                    onSceneReady(scene));\n            }\n            engine.runRenderLoop(() => {\n                if(typeof onRender === 'function'){\n                    onRender(scene);\n                }\n                scene.render();\n            })\n\n            const resize = () =>{\n                scene.getEngine().resize();\n                \n            }\n            \n            if(window){\n                window.addEventListener('resize', resize);\n            }\n            return () =>{\n                scene.getEngine().dispose();\n                if(window){\n                    window.removeEventListener('resize', resize);\n                }\n            }\n        \n    }, [reactCanvas])\n\n    return(\n        \n        <canvas         \n        width={window.innerWidth} \n        height={window.innerHeight-50} \n        ref={reactCanvas} {...rest} />\n        \n    )\n\n}","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    Color3, \n    MeshBuilder,\n    TrailMesh,\n    StandardMaterial,\n    SpotLight,\n    Mesh,\n    Engine,\n    PhysicsImpostor,\n    Plane,\n    MirrorTexture\n} from '@babylonjs/core';\nimport SceneComponent from '../babylon/sceneComponent';\n\n\n\nconst onSceneReady = scene =>{\n    var beta = 0;\n    var camera = new ArcRotateCamera(\"ArcRotateCamera\", beta, 1.2, 40, \n        new Vector3(0, 0, 0), scene);\n        camera.useAutoRotationBehavior = true;\n    //camera.setTarget(Vector3.Zero());\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    scene.clearColor = new Color3(0.0, 0.0, 0.0);\n    scene.enablePhysics();\n\n    /* var light = new HemisphericLight(\"light\", new Vector3(1,1,0), scene);\n    light.intensity = 0.7; */\n    var light = new SpotLight(\"spotLight\", new Vector3(0, 4, 0), \n        new Vector3(0, -1, 0), Math.PI , .5, scene);\n\tlight.diffuse = new Color3(1, 0, 0);\n    \n    var environment = scene.createDefaultEnvironment({\n        skyboxSize: 300\n    });\n    environment.ground.position.y = -5;\n    environment.setMainColor(new Color3(0, 0, 0));\n    var ground = Mesh.CreateBox(\"Ground\", 1, scene);\n    ground.scaling = new Vector3(200, 1, 200);\n    ground.position.y = environment.ground.position.y - (0.5 + 0.001)\n\n    var sphere = MeshBuilder.CreateSphere(\"sphere\", \n        {diameter: 5, segments: 128}, scene);\n    \n\n    \n\n    var alpha = Math.PI/30;\n    \n    // Create a mesh for the trail to follow.\n    \n    /* var p1 = MeshBuilder.CreateSphere(\"p1\", \n        {diameter: 1, segments: 128}, scene);\n    var p1mat = new StandardMaterial(\"p1\", scene);\n    p1mat.emissiveColor = new Color3.White();\n    p1.material = p1mat;\n    p1.bakeCurrentTransformIntoVertices();\n    p1.position.x = Math.sin(gamma)*10;\n    p1.position.y = Math.cos(gamma)*9;\n    p1.position.z = Math.cos(gamma)*10;\n    p1.computeWorldMatrix(true);\n    var t1= new TrailMesh('new', p1, scene, .25, 250, true);\n    var s1 = new StandardMaterial('sourceMat', scene);\n    s1.emissiveColor = new Color3.White(); */\n    //sourceMat.diffuseColor = new Color3.Red();\n    //sourceMat.specularColor = new Color3.Black();\n    //t1.material = s1;\n    \n\n    /* var p2 = MeshBuilder.CreateSphere(\"p2\", \n        {diameter: 1, segments: 128}, scene);\n    var p2mat = new StandardMaterial(\"p2\", scene);\n    p2mat.emissiveColor = new Color3.White();\n    p2.material = p2mat;\n    p2.bakeCurrentTransformIntoVertices();\n    p2.position.x = Math.cos(alpha)*-10;\n    p2.position.y = Math.sin(alpha)*-9;\n    p2.position.z = Math.sin(alpha)*10;\n    p2.computeWorldMatrix(true);\n    var t2 = new TrailMesh('new', p2, scene, .25, 250, true);\n    var s2 = new StandardMaterial('sourceMat', scene);\n    s2.emissiveColor = new Color3.White(); */\n    //sourceMat.diffuseColor = new Color3.Red();\n    //sourceMat.specularColor = new Color3.Black();\n    //t2.material = s2;\n\n    var p3 = MeshBuilder.CreateSphere(\"p2\", \n        {diameter: 1, segments: 128}, scene);\n    var p3mat = new StandardMaterial(\"p3\", scene);\n    p3mat.emissiveColor = new Color3(.2, .91, .91);\n    p3.material = p3mat;\n    p3.bakeCurrentTransformIntoVertices();\n    p3.position.x = Math.sin(alpha)*10;\n    p3.position.z = Math.cos(alpha)*10;\n    p3.computeWorldMatrix(true);\n    var trail = new TrailMesh('new', p3, scene, .5, 25, true);\n    var sourceMat = new StandardMaterial('sourceMat', scene);\n    sourceMat.emissiveColor = new Color3.Black()//Vector3(.2, .91, .97);\n    trail.material = sourceMat;\n    const observer = scene.onBeforeRenderObservable.add(animate);\n    \n    function animate() {\n        alpha += Math.PI/25;\n        \n        p3.position.x = Math.sin(alpha)*10;\n        p3.position.z = Math.cos(alpha)*10;\n        \n        //p3.position.y = Math.sin(gamma)*10;\n        /* p1.position.x = Math.sin(gamma)*10;\n        p1.position.y = Math.cos(gamma)*9;\n        p1.position.z = Math.cos(gamma)*10;\n        p2.position.x = Math.cos(alpha)*-10;\n        p2.position.y = Math.sin(alpha)*-9;\n        p2.position.z = Math.sin(alpha)*10; */\n        //beta += Math.PI/5;\n        //camera.position = new Vector3(Math.sin(beta), 1.2, 35)\n        \n\n        \n    }\n    ground.computeWorldMatrix(true);\n    var ground_worldMatrix = ground.getWorldMatrix();\n    var ground_vertexData = ground.getVerticesData(\"normal\");\n    var groundNormal = new Vector3(ground_vertexData[0],\n        ground_vertexData[1], ground_vertexData[2]);\n    groundNormal = Vector3.TransformNormal(groundNormal, ground_worldMatrix);\n\n    var reflector = new Plane.FromPositionAndNormal(ground.position, \n        groundNormal.scale(-1));\n    var mirrorMaterial = new StandardMaterial(\"mirror\", scene)\n    mirrorMaterial.reflectionTexture = new MirrorTexture(\"mirror\", 1024, scene, true);\n    mirrorMaterial.reflectionTexture.mirrorPlane = reflector;\n\tmirrorMaterial.reflectionTexture.renderList = [sphere];\n    mirrorMaterial.reflectionTexture.level = 1;\n    ground.material = mirrorMaterial;\n    //ground.material.alpha = 0.99;\n    ground.material.alphaMode = Engine.ALPHA_ONEONE;\n    ground.physicsImpostor = new PhysicsImpostor(ground, PhysicsImpostor.BoxImpostor, {\n        mass: 0,\n        restitution: 0.6\n    })\n    \n\n\n\n}\n\n\n\n\nexport default () => (\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n)","//import React from 'react';\nimport { \n    Color3,\n    Vector3, \n    Mesh,\n    PhysicsImpostor,\n    StandardMaterial,\n    Texture,\n\n    } from '@babylonjs/core';\nimport { \n    AdvancedDynamicTexture,\n    Button,\n    Control,\n    SelectionPanel,\n    InputText,\n    TextBlock,\n    Rectangle,\n    } from \"@babylonjs/gui\";\nimport * as CANNON from 'cannon';\nwindow.CANNON = CANNON;\n\n\nexport default (scene) =>{\n\n  var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n  \n  var material = new StandardMaterial(scene);\n  material.diffuseColor = new Color3(1.0, 0, 0);\n\n  var velocity = 5;\n\n  \n  function play(){\n    \n    var rect1 = new Rectangle();\n    rect1.width = 0.2;\n    rect1.height = \"20px\";\n    rect1.cornerRadius = 20;\n    rect1.color = \"red\";\n    rect1.thickness = 1;\n    rect1.background = \"white\";\n    advancedTexture.addControl(rect1);\n    \n    rect1.linkOffsetY = -50;\n\n    var rect2 = new Rectangle();\n    rect2.width = 0.2;\n    rect2.height = \"20px\";\n    rect2.cornerRadius = 20;\n    rect2.color = \"red\";\n    rect2.thickness = 1;\n    rect2.background = \"white\";\n    advancedTexture.addControl(rect2);\n    \n    rect2.linkOffsetY = -50;\n\n    var backgroundMaterial = new StandardMaterial(\"backgroundMaterial\", scene);\n    var sphere1 = Mesh.CreateSphere(\"sphere1\", 16, 1, scene);\n    backgroundMaterial.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/osu.png', scene);\n    sphere1.material = backgroundMaterial;\n    sphere1.position = new Vector3(-2, 2, 0);\n    sphere1.rotate(new Vector3(0, 0, 4), 3)\n    sphere1.physicsImpostor = new PhysicsImpostor(sphere1, PhysicsImpostor.SphereImpostor,\n      {mass:1.5, restitution: 1.0, friction:0}, scene);\n    sphere1.physicsImpostor.setLinearVelocity(new Vector3(velocity, 0, 0));\n    \n    rect1.linkWithMesh(sphere1);   \n    var label1 = new TextBlock();\n    label1.text = sphere1.physicsImpostor.getLinearVelocity()._x +' m/s';\n    rect1.addControl(label1)\n\n    var bgMat = new StandardMaterial(\"bg2\", scene);\n    bgMat.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/Mi.png', scene);\n    var sphere2 = Mesh.CreateSphere(\"sphere1\", 16, 1, scene);\n    sphere2.position = new Vector3(2, 2, 0);\n    sphere2.material = bgMat;\n    sphere2.rotate(new Vector3(0, 0, 4), 3);\n    sphere2.physicsImpostor = new PhysicsImpostor(sphere2, PhysicsImpostor.SphereImpostor,\n      {mass:1, restitution: 1.0, friction:0}, scene);\n\n    rect2.linkWithMesh(sphere2);   \n    var label2 = new TextBlock();\n    \n    label2.text = sphere2.physicsImpostor.getLinearVelocity()._x +' m/s';    \n    rect2.addControl(label2);\n\n    window.setInterval(timer, 100);\n    function timer(){\n      label2.text = sphere2.physicsImpostor.getLinearVelocity()._x.toFixed(2) +' m/s';\n      label1.text = sphere1.physicsImpostor.getLinearVelocity()._x.toFixed(2) +' m/s';\n    };\n\n    \n    \n  }\n  var act = true;\n  var menuButton = new Button.CreateSimpleButton(\"menu\", \"Start\");\n  menuButton.color = \"black\";\n  menuButton.width = 1;\n  menuButton.height = \"40px\";\n  menuButton.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n  menuButton.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n  \n  \n  menuButton.onPointerDownObservable.add(function(){\n    if(act === true){\n      play();\n      act = false;\n      ;}\n    else{\n      play();\n      act = true;\n    }\n    \n  })\n  \n  var input = new InputText(\"Enter\");\n  input.width = 1;\n  input.text = \"Enter velocity\";\n  input.height = \"40px\";\n  input.background = \"black\";\n  input.color = \"white\";\n  input.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n  input.onPointerDownObservable.add(function(){\n    input.text = \"\";\n  })\n  input.onTextChangedObservable.add(function(){\n    velocity = input.text;\n  })\n  scene.enablePhysics();\n\n  var displayGrid = new SelectionPanel(\"sp\", []);\n    displayGrid.color = \"black\";  \n    displayGrid.width = \"150px\";\n    displayGrid.height = \"100px\";\n    displayGrid.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    displayGrid.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    displayGrid.top = \"60px\";\n    displayGrid.left = \"80px\";\n\n    advancedTexture.addControl(displayGrid);\n    displayGrid.addControl(menuButton)\n    displayGrid.addControl(input);\n}","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    Color3, \n    HemisphericLight,\n    MeshBuilder,\n    Mesh,\n    Texture,\n    BackgroundMaterial, \n    } from '@babylonjs/core';\nimport { GridMaterial } from \"@babylonjs/materials/grid\";\nimport SceneComponent from '../sceneComponent';\nimport * as CANNON from 'cannon';\nimport Collision from './collision';\nwindow.CANNON = CANNON;\n\nconst onSceneReady = scene =>{\n    var camera = new ArcRotateCamera(\"ArcRotateCamera\", 4.7, 1.2, 12, \n        new Vector3(0, 0, 0), scene);\n    camera.setTarget(Vector3.Zero());\n    const light = new HemisphericLight(\"light\", new Vector3(1, 1, 0));\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var gravityVector = new Vector3(0, 0, 0);\n    scene.enablePhysics(gravityVector);\n    \n      \n    var skyMaterial = new GridMaterial(\"skyMaterial\", scene);\n      skyMaterial.majorUnitFrequency = 6;\n      skyMaterial.minorUnitVisibility = 0.43;\n      skyMaterial.gridRatio = 0.5;\n      skyMaterial.mainColor = new Color3(1, 1, 1);\n      skyMaterial.lineColor = new Color3(0, 1.0, 1.0);\t\n      skyMaterial.backFaceCulling = false;\n\n    var skySphere = Mesh.CreateSphere(\"skySphere\", 30, 90, scene);\n      skySphere.material = skyMaterial;\n\n    var ground = MeshBuilder.CreateGround(\"ground1\", {width:6, height:6}, scene);\n    var backgroundMaterial = new BackgroundMaterial(\"backgroundMaterial\", scene);\n    backgroundMaterial.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/osu.png', scene);\n    ground.material = backgroundMaterial;\n    //ground.physicsImpostor = new PhysicsImpostor(ground, PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.9 }, scene);\n    \n\n    //Menu();\n    Collision(scene);\n\n}\n\n\n\nexport default () => (\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n)","export default __webpack_public_path__ + \"static/media/atom.1651bc53.svg\";","export default __webpack_public_path__ + \"static/media/sigma.b3ee976d.svg\";","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    Color3, \n    HemisphericLight,\n    MeshBuilder,\n    Mesh,\n    Texture,\n    BackgroundMaterial, \n    PhysicsImpostor,\n    StandardMaterial,\n    } from '@babylonjs/core';\n\nimport { \n    AdvancedDynamicTexture,\n    Button,\n    Control,\n    SelectionPanel,\n    TextBlock,\n    Rectangle,\n    } from \"@babylonjs/gui\";\nimport { GridMaterial } from \"@babylonjs/materials/grid\";\nimport SceneComponent from '../sceneComponent';\nimport * as CANNON from 'cannon';\nwindow.CANNON = CANNON;\n\n\nconst onSceneReady = scene =>{\n    var camera = new ArcRotateCamera(\"ArcRotateCamera\", 4.7, 1.2, 15, \n        new Vector3(0, 0, 0), scene);\n    camera.setTarget(Vector3.Zero());\n    new HemisphericLight(\"light\", new Vector3(1, 1, 0));\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var gravityVector = new Vector3(0, 0, 0);\n    scene.enablePhysics(gravityVector);\n    \n      \n    var skyMaterial = new GridMaterial(\"skyMaterial\", scene);\n      skyMaterial.majorUnitFrequency = 6;\n      skyMaterial.minorUnitVisibility = 0.43;\n      skyMaterial.gridRatio = 0.5;\n      skyMaterial.mainColor = new Color3(1, 1, 1);\n      skyMaterial.lineColor = new Color3(0, 1.0, 1.0);\t\n      skyMaterial.backFaceCulling = false;\n\n    var skySphere = Mesh.CreateSphere(\"skySphere\", 30, 90, scene);\n      skySphere.material = skyMaterial;\n\n    var ground = MeshBuilder.CreateGround(\"ground1\", {width:6, height:6}, scene);\n    var backgroundMaterial = new BackgroundMaterial(\"backgroundMaterial\", scene);\n    backgroundMaterial.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/osu.png', scene);\n    ground.material = backgroundMaterial;\n    //ground.physicsImpostor = new PhysicsImpostor(ground, PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.9 }, scene);\n    \n\n    //Menu();\n    Collision(scene);\n\n}\n\n\n\nfunction Collision (scene) {\n\n  var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n  \n  var material = new StandardMaterial(scene);\n  material.diffuseColor = new Color3(1.0, 0, 0);\n\n  var velocity = 8;\n\n  var rect1 = new Rectangle();\n    rect1.width = 0.2;\n    rect1.height = \"20px\";\n    rect1.cornerRadius = 20;\n    rect1.color = \"red\";\n    rect1.thickness = 1;\n    rect1.background = \"white\";\n    advancedTexture.addControl(rect1);\n    \n    rect1.linkOffsetY = -50;\n\n    \n\n    var backgroundMaterial = new StandardMaterial(\"backgroundMaterial\", scene);\n    var sphere1 = Mesh.CreateSphere(\"sphere1\", 16, 1.5, scene);\n    backgroundMaterial.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/osu.png', scene);\n    sphere1.material = backgroundMaterial;\n    sphere1.position = new Vector3(-10, 2, 0);\n    sphere1.rotate(new Vector3(0, 0, 4), 3)\n    sphere1.physicsImpostor = new PhysicsImpostor(sphere1, PhysicsImpostor.SphereImpostor,\n      {mass:1.5, restitution: 1.0, friction:0}, scene);\n\n      rect1.linkWithMesh(sphere1);   \n      var label1 = new TextBlock();\n      label1.text = sphere1.physicsImpostor.getLinearVelocity()._x +' m/s';\n      rect1.addControl(label1)\n  \n      var bgMat = new StandardMaterial(\"bg2\", scene);\n      bgMat.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/Mi.png', scene);\n      var sphere2 = Mesh.CreateSphere(\"sphere1\", 16, 1, scene);\n      sphere2.position = new Vector3(0, 2, 0);\n      sphere2.material = bgMat;\n      sphere2.rotate(new Vector3(0, 0, 4), 3);\n      sphere2.physicsImpostor = new PhysicsImpostor(sphere2, PhysicsImpostor.SphereImpostor,\n        {mass:1, restitution: 1.0, friction:0}, scene);\n      sphere2.physicsImpostor.registerOnPhysicsCollide(sphere1.physicsImpostor, function() {\n        sphere2Text();\n\t});\n  function sphere2Text(){\n    var rect2 = new Rectangle();\n    rect2.width = 0.2;\n    rect2.height = \"20px\";\n    rect2.cornerRadius = 20;\n    rect2.color = \"red\";\n    rect2.thickness = 1;\n    rect2.background = \"white\";\n    advancedTexture.addControl(rect2);\n    \n    rect2.linkOffsetY = -50;\n    rect2.linkWithMesh(sphere2);   \n    var label2 = new TextBlock();\n    \n    label2.text = 'HELP ME!';    \n    rect2.addControl(label2);\n\n  }\n  function play(){\n    \n    \n    \n    sphere1.physicsImpostor.setLinearVelocity(new Vector3(velocity, 0, 0));\n    \n    \n\n    window.setInterval(timer, 100);\n    function timer(){\n      //label2.text = sphere2.physicsImpostor.getLinearVelocity()._x.toFixed(2) +' m/s';\n      label1.text = sphere1.physicsImpostor.getLinearVelocity()._x.toFixed(2) +' m/s';\n    };\n\n    \n    \n  }\n  var act = true;\n  var menuButton = new Button.CreateSimpleButton(\"menu\", \"Start\");\n  menuButton.color = \"black\";\n  menuButton.width = 1;\n  menuButton.height = \"20px\";\n  menuButton.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n  menuButton.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n  \n  \n  menuButton.onPointerDownObservable.add(function(){\n    if(act === true){\n      play();\n      act = false;\n      ;}\n    else{\n      play();\n      act = true;\n    }\n    \n  })\n  \n/*   var input = new InputText(\"Enter\");\n  input.width = 1;\n  input.text = \"Enter velocity\";\n  input.height = \"40px\";\n  input.background = \"black\";\n  input.color = \"white\";\n  input.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n  input.onPointerDownObservable.add(function(){\n    input.text = \"\";\n  })\n  input.onTextChangedObservable.add(function(){\n    velocity = input.text;\n  }) */\n  scene.enablePhysics();\n\n   var displayGrid = new SelectionPanel(\"sp\", []);\n    displayGrid.color = \"black\";  \n    displayGrid.width = \"150px\";\n    displayGrid.height = \"25px\";\n    displayGrid.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    displayGrid.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    displayGrid.top = \"60px\";\n    displayGrid.left = \"80px\";\n\n    advancedTexture.addControl(displayGrid);\n    displayGrid.addControl(menuButton)\n    //displayGrid.addControl(input); \n}\n\n\nexport default () => (\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n)","export default __webpack_public_path__ + \"static/media/osu.04a7bd3f.svg\";","\nimport { \n    Vector3, \n    Color3,\n    MeshBuilder,\n    } from '@babylonjs/core';\n\nlet line;\n\nvar GridGen =(props)=>{\n    const {scene, gridData} = props;\n    var xStartPoint = gridData.xmin;\n    var yStartPoint = gridData.ymin;\n    var zStartPoint = gridData.zmin;\n    var xRange = gridData.xmax;\n    var yRange = gridData.ymax;\n    var zRange = gridData.zmax;\n    var resolution = gridData.resolution;\n  \n    var xy = [];\n    //xy\n    for(let i = yStartPoint; i<=yRange;i+=resolution){\n      xy.push([\n        new Vector3(xStartPoint, i, 0),\n        new Vector3(xRange, i, 0),        \n      ])\n    }   \n    for(let i = xStartPoint; i<=xRange;i+=resolution){\n      xy.push([\n        new Vector3(i, yStartPoint, 0),\n        new Vector3(i, yRange, 0),        \n      ])\n    } \n  \n    let xyGrid = MeshBuilder.CreateLineSystem(\"lineSystem\", {lines: xy}, scene);\n    xyGrid.position = new Vector3(0, 0, zRange)\n    var xz = [];\n     for(let i = xStartPoint; i<=xRange;i+=resolution){\n      xz.push([\n        new Vector3(i, 0, zStartPoint),\n        new Vector3(i, 0, zRange)\n      ]\n    )}\n    for(let i = zStartPoint; i<=zRange;i+=resolution){\n      xz.push([\n        new Vector3(xStartPoint, 0, i),\n        new Vector3(xRange, 0, i),        \n      ]\n    )}\n    let xzGrid = MeshBuilder.CreateLineSystem(\"lineSystem\", {lines: xz}, scene);\n    //yz\n     \n    var yz = [];\n    for(let i = yStartPoint; i<=yRange;i+=resolution){\n      yz.push([\n        new Vector3(0, i, zStartPoint),\n        new Vector3(0, i, zRange)\n      ])\n    }  \n    for(let i = zStartPoint; i<=zRange;i+=resolution){\n      yz.push([\n        new Vector3(0, yStartPoint, i),\n        new Vector3(0, yRange, i)\n      ])\n    }\n    let yzGrid = MeshBuilder.CreateLineSystem(\"lineSystem\", {lines: yz}, scene);\n    //Animate(scene, xy, xz, yz)\n    return[xyGrid, xzGrid, yzGrid]\n}\n\nvar Animate = (scene, xy, xz, yz) =>{\n    \n    const xyl = xy.length;\n    const xzl = xz.length;\n    const yzl = yz.length;\n    const max = Math.max(xyl,xzl,yzl);\n    var counter = 0;\n    var interval = .2*1000;  \n    var myTimer = window.setInterval(timer, interval);\n    \n    function timer(){\n        if(counter<xyl){\n            line = MeshBuilder.CreateLines(\"lines\", {points:xy[counter]}, scene);\n            line.color = new Color3.Black();\n        }\n        if(counter<xzl){\n            line = MeshBuilder.CreateLines(\"lines\", {points:xz[counter]}, scene);\n            line.color = new Color3.Black();\n        }\n        if(counter<yzl){\n            line = MeshBuilder.CreateLines(\"lines\", {points:yz[counter]}, scene);\n            line.color = new Color3.Black();\n        }\n        if(max===counter){\n            clearInterval(myTimer);\n        }\n        counter ++;\n    }\n\n\n}\n\nexport default GridGen;","import { \n    Vector3,     \n    MeshBuilder,    \n    Mesh,\n    StandardMaterial,   \n    Color3, \n    HighlightLayer\n    } from '@babylonjs/core';\n\n\nconst makeRibbon = (scene, solution, charCurve, resolution) =>{\n\n  const mat = new StandardMaterial(\"mat1\", scene);\n  mat.diffuseColor = new Color3(0.5, 0, 0);\n  mat.backFaceCulling = false;\n\n  const steps = solution.length ;\n  const s = steps * resolution;\n  var l = solution[1].length;\n\n  \n  const paths = [];\n  for(let i = 0; i<steps; i++){\n\n      let path = [];\n      for(let j = 0; j < l; j++){\n        let x = solution[i][j][0];\n        let y = solution[i][j][1];\n        let u = solution[i][j][2];\n      path.push(new Vector3(x, y, u));\n      }\n      paths.push(path);\n      if(i%s===0){\n        MeshBuilder.CreateLines(\"path\", {points:path})}\n  } \n  const ribbon = MeshBuilder.CreateRibbon(\"ribbon\", {pathArray: paths, sideOrientation: Mesh.DOUBLESIDE});\n  ribbon.material = mat;\n\n  let l2 = charCurve.length;\n  const cCurve = [];\n  for(let j = 0; j < l2; j++){\n    let x = charCurve[j][0];\n    let y = charCurve[j][1];\n    let u = charCurve[j][2];\n  cCurve.push(new Vector3(x, y, u));\n  }\n  var cLine = MeshBuilder.CreateLines(\"charCurve\", {points:cCurve})\n  var hl = new HighlightLayer(\"hl1\", scene);\n  hl.addMesh(cLine, Color3.Yellow());\n  cLine.edgesWidth = 2;\n  return ribbon; \n  \n}\n\nexport default makeRibbon;\n\n","//import React from 'react';\nimport { \n    Vector3, \n    DynamicTexture,\n    Mesh,\n    StandardMaterial,\n    Color3, \n    } from '@babylonjs/core';\n\n\n\nvar Axis =(props)=> {\n\n  var { scene, size } = props;\n\n  var makeTextPlane = function(text, color, size) {\n  var dynamicTexture = new DynamicTexture(\"DynamicTexture\", 50, scene, true);\n  dynamicTexture.hasAlpha = true;\n  dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color , \"transparent\", true);\n  var plane = new Mesh.CreatePlane(\"TextPlane\", size, scene, true);\n  plane.material = new StandardMaterial(\"TextPlaneMaterial\", scene);\n  plane.material.backFaceCulling = false;\n  plane.material.specularColor = new Color3(1, 1, 1);\n  plane.material.diffuseTexture = dynamicTexture;\n  return plane;\n   };\n   \n   \n  var axisX = Mesh.CreateLines(\"axisX\", [ \n    new Vector3.Zero(), new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0), \n    new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)\n    ], scene);\n  axisX.color = new Color3(1, 0, 0);\n  var xChar = makeTextPlane(\"X\", \"red\", size / 5);\n  xChar.position = new Vector3(0.9 * size, 0.1 * size, 0);\n  var axisY = Mesh.CreateLines(\"axisY\", [\n      new Vector3.Zero(), new Vector3(0, size, 0), new Vector3( -0.05 * size, size * 0.95, 0), \n      new Vector3(0, size, 0), new Vector3( 0.05 * size, size * 0.95, 0)\n      ], scene);\n  axisY.color = new Color3(0, 1, 0);\n  var yChar = makeTextPlane(\"U\", \"green\", size / 5);\n  yChar.position = new Vector3(0, 0.9 * size, 0.1 * size);\n  var axisZ = Mesh.CreateLines(\"axisZ\", [\n      new Vector3.Zero(), new Vector3(0, 0, size), new Vector3( 0 , -0.05 * size, size * 0.95),\n      new Vector3(0, 0, size), new Vector3( 0, 0.05 * size, size * 0.95)\n      ], scene);\n  axisZ.color = new Color3(0, 0, 1);\n  var zChar = makeTextPlane(\"T\", \"blue\", size / 5);\n  zChar.position = new Vector3(size, 0.05 * size, 0.9 * size);\n  console.log(axisX)\n  \n  return [axisX, xChar,\n          axisY, yChar,\n          axisZ, zChar\n        ] \n  }\n\n  export default Axis;\n","import React from 'react';\n\nimport { \n  Vector3, \n  ArcRotateCamera,\n  Color3,\n  SpotLight,\n  HemisphericLight\n  } from '@babylonjs/core';\n\nimport SceneComponent from '../../babylon/sceneComponent';\n//import {data} from './points3';\nimport GridGen from '../../babylon/grid/grid';\nimport Data from './points1.json';\nimport Ribbon from '../../babylon/shapes/ribbon';\nimport Axis from '../../babylon/axis/axis';\n\nconst CreateLine = (scene) =>{\n  var camera = new ArcRotateCamera(\"ArcRotateCamera\", -.85, .8, 8, \n        new Vector3(0, 0, 0), scene);\n    scene.clearColor = Color3.Black();\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var light = new HemisphericLight(\"light\", new Vector3(1, 1, 0));//SpotLight(\"spotLight\", new Vector3(0, 4, 0), \n        //new Vector3(0, -1, 0), Math.PI , .5, scene);\n\tlight.diffuse = new Color3(1, 1, 1);\n\n  const solution = Data.solution;\n  const resolution = Data.resolution;\n  const charCurve = Data.umaxcurve;\n  \n  const gridData = {\n    xmin: Data.xinitial,\n    ymin: Data.umin-1,\n    zmin: Data.tinitial,\n    xmax: Data.xfinal,\n    ymax: Data.umax+1,\n    zmax: Data.tfinal,\n    resolution: 0.5,\n  }\n\n  var size = 1;\n  var grid = GridGen({scene,gridData});\n  \n  var xyGrid = grid[0];\n  var xzGrid = grid[1];\n  var yzGrid = grid[2];\n  xyGrid.alpha = 0.2;\n  xzGrid.alpha = 0.2;\n  yzGrid.alpha = 0.2; \n\n  var axis = Axis({scene, size})\n  var axisX = axis[0]\n  var xChar = axis[1]\n  var axisY = axis[2]\n  var yChar = axis[3]\n  var axisZ = axis[4] \n  var zChar = axis[5] \n  axisX.scaling.x = Data.xfinal;\n  axisZ.scaling.z = Data.tfinal;\n  xChar.scaling.x = 2;\n  xChar.scaling.y = 2;\n  xChar.position.x = Data.xfinal + .5;\n  yChar.scaling.x = 2;\n  yChar.scaling.y = 2;\n  yChar.position.y = Data.umax + .5;\n  zChar.scaling.x = 2;\n  zChar.scaling.y = 2;\n  zChar.position.x = Data.xfinal + .5;\n  zChar.position.z = Data.tfinal + .5;  \n  \n  var ribbon = Ribbon(scene, solution, charCurve, resolution);\n  \n}\n\n\n\n\nfunction firstO(){\n  \n  return(\n    <div >\n      <SceneComponent style={{display:\"block\"}} antialias onSceneReady={CreateLine}\n        id='my-canvas' />      \n    </div>\n  )\n}\n\n\n\nexport default firstO;","export default __webpack_public_path__ + \"static/media/pde1.056245c5.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport PDE1st from './pde/pde_1stO';\nimport {\n  Switch,\n  Route,\n  Link, \n  HashRouter,\n\n} from \"react-router-dom\";\n\nimport pde from '../../img/pde1.png'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n  container:{\n    paddingTop:50\n  },\n}));\n\nexport default function RecipeReviewCard() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div className={classes.container}>\n    <HashRouter>\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            1st\n          </Avatar>\n        }\n        title=\"First Order PDE\"\n      />\n      <Link to=\"/phyworx/pdefirst\">\n      <CardMedia\n        className={classes.media}\n        image={pde}\n        title=\"PDE1\"\n      />\n      </Link>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          First Order Partial Differential Equations\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Details under construction</Typography>\n          <Typography paragraph>\n            \n          </Typography>\n          <Typography paragraph>\n            \n          </Typography>\n          <Typography paragraph>\n            \n          </Typography>\n          <Typography>\n            \n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n    <Switch>\n\n    </Switch>\n    </HashRouter>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport Home from '../home/home';\nimport PhysicsWorld from '../babylon/physworld/physworld';\n//import GLB from '../babylon/glbLoader';\nimport Atom from '../../img/atom.svg';\n//import BabylonIcon from '../../img/babylon_gray2.svg';\nimport Sigma from '../../img/sigma.svg';\nimport Buckeye from '../babylon/physworld/buckeye';\nimport BuckeyeLogo from  '../../img/osu.svg';\nimport Math from '../math/maf2';\nimport PDE1st from '../math/pde/pde_1stO'\nimport {\n    Switch,\n    Route,\n    Link, \n    HashRouter,\n  } from \"react-router-dom\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \n    display: 'flex',\n  },\n  appBar: {\n    backgroundColor: 'black',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    \n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n     \n      <HashRouter>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <Link to=\"/\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Home'>          \n          <ListItemIcon>\n              <HomeIcon />\n          </ListItemIcon>\n          <ListItemText style={{color:\"black\"}}>Home</ListItemText>          \n        </ListItem>\n        </Link>\n        <Divider />\n        <Link to=\"/phyworx/math\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Math' >        \n          <ListItemIcon >\n              <img src={ Sigma } alt=\"sigma\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText style={{color:\"black\"}}>Math</ListItemText>        \n        </ListItem>\n        </Link>\n        <Link to=\"/phyworx/physics\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Physics'>        \n          <ListItemIcon>\n              <img src={ Atom } alt=\"atomicon\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText style={{color:\"black\"}}>Physics</ListItemText>        \n        </ListItem>\n        </Link>\n        <Link to=\"/phyworx/buckeye\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Buckeye'>        \n          <ListItemIcon>\n              <img src={ BuckeyeLogo } alt=\"atomicon\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText style={{color:\"black\"}}>OSU</ListItemText>        \n        </ListItem>\n        </Link>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>            \n            <Route exact path=\"/\" >\n            <Home />\n            </Route>      \n            <Route path=\"/phyworx/math\" >\n              <Math />\n            </Route> \n            <Route path=\"/phyworx/physics\" >\n              <PhysicsWorld />\n            </Route>  \n            <Route path=\"/phyworx/buckeye\">\n              <Buckeye/>\n            </Route>      \n            <Route path='/phyworx/pdefirst'>\n          <PDE1st />\n        </Route>\n        </Switch>\n        \n      </main>\n      </HashRouter>\n    </div>\n  );\n}\n","import './App.css';\n\nimport Header from \"./components/header/header2\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>    \n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}