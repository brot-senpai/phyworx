{"version":3,"sources":["components/three_app/box.js","components/babylon/sceneComponent.jsx","components/babylon/physworld/collision.js","components/babylon/physworld/physworld.js","components/babylon/dynamicGrid.js","components/babylon/glbLoader.js","img/atom.svg","img/babylon_gray2.svg","components/header/header.js","App.js","reportWebVitals.js","index.js"],"names":["style","height","width","Component","props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","useEffect","current","engine","Engine","resize","scene","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","render","getEngine","window","addEventListener","dispose","removeEventListener","innerWidth","innerHeight","ref","CANNON","camera","ArcRotateCamera","Vector3","setTarget","Zero","HemisphericLight","canvas","getRenderingCanvas","attachControl","gravityVector","enablePhysics","skyMaterial","GridMaterial","majorUnitFrequency","minorUnitVisibility","gridRatio","mainColor","Color3","lineColor","backFaceCulling","Mesh","CreateSphere","material","ground","MeshBuilder","CreateGround","backgroundMaterial","BackgroundMaterial","diffuseTexture","Texture","process","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","StandardMaterial","diffuseColor","velocity","play","rect1","Rectangle","cornerRadius","color","thickness","background","addControl","linkOffsetY","rect2","sphere1","position","physicsImpostor","PhysicsImpostor","SphereImpostor","mass","restitution","friction","setLinearVelocity","linkWithMesh","label1","TextBlock","text","getLinearVelocity","_x","sphere2","label2","setInterval","toFixed","act","menuButton","Button","CreateSimpleButton","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_BOTTOM","onPointerDownObservable","add","input","InputText","VERTICAL_ALIGNMENT_TOP","onTextChangedObservable","displayGrid","SelectionPanel","top","left","Collision","id","Math","PI","clearColor","White","intensity","size","makeTextPlane","dynamicTexture","DynamicTexture","hasAlpha","drawText","plane","CreatePlane","specularColor","axisX","CreateLines","xChar","axisY","yChar","axisZ","zChar","planes","psize","grid","opacity","Gray","xPlane","Plane","FromPositionAndNormal","yPlane","zPlane","planex","sourcePlane","sideOrientation","DOUBLESIDE","planey","planez","gridGen","slider","Slider","minimum","maximum","value","HORIZONTAL_ALIGNMENT_CENTER","onValueChangedObservable","scaling","x","y","z","showAxis","Grid","SceneLoader","RegisterPlugin","GLTFFileLoader","IncrementalLoading","Append","createDefaultCameraOrLight","activeCamera","alpha","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","backgroundColor","elevation","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","overflow","flexGrow","MiniDrawer","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","onClick","edge","Drawer","variant","paper","direction","Divider","to","textDecoration","ListItem","button","ListItemIcon","ListItemText","src","BabylonIcon","alt","Atom","exact","path","Typography","paragraph","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.362034b9.chunk.js","sourcesContent":["\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from 'three';\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\n\nconst style = {\n    height: 500, // we can control scene size by setting container dimensions\n    width: 600\n};\n\nexport default class App extends Component {\n    componentDidMount() {\n        this.sceneSetup();\n        this.addCustomSceneObjects();\n        this.startAnimationLoop();\n        window.addEventListener('resize', this.handleWindowResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize);\n        window.cancelAnimationFrame(this.requestID);\n        this.controls.dispose();\n    }\n\n    // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n    // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n    sceneSetup = () => {\n        // get container dimensions and use them for scene sizing\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(\n            75, // fov = field of view\n            width / height, // aspect ratio\n            0.1, // near plane\n            1000 // far plane\n        );\n        this.camera.position.z = 9; // is used here to set some distance from a cube that is located at z = 0\n        // OrbitControls allow a camera to orbit around the object\n        // https://threejs.org/docs/#examples/controls/OrbitControls\n        this.controls = new OrbitControls( this.camera, this.mount );\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize( width, height );\n        this.mount.appendChild( this.renderer.domElement ); // mount using React ref\n    };\n\n    // Here should come custom code.\n    // Code below is taken from Three.js BoxGeometry example\n    // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n    addCustomSceneObjects = () => {\n        const geometry = new THREE.BoxGeometry(2, 2, 2);\n        const material = new THREE.MeshPhongMaterial( {\n            color: 0x156289,\n            emissive: 0x072534,\n            side: THREE.DoubleSide,\n            flatShading: true\n        } );\n        this.cube = new THREE.Mesh( geometry, material );\n        this.scene.add( this.cube );\n\n        const lights = [];\n        lights[ 0 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n        lights[ 1 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n        lights[ 2 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n\n        lights[ 0 ].position.set( 0, 200, 0 );\n        lights[ 1 ].position.set( 100, 200, 100 );\n        lights[ 2 ].position.set( - 100, - 200, - 100 );\n\n        this.scene.add( lights[ 0 ] );\n        this.scene.add( lights[ 1 ] );\n        this.scene.add( lights[ 2 ] );\n    };\n\n    startAnimationLoop = () => {\n        this.cube.rotation.x += 0.01;\n        this.cube.rotation.y += 0.01;\n\n        this.renderer.render( this.scene, this.camera );\n\n        // The window.requestAnimationFrame() method tells the browser that you wish to perform\n        // an animation and requests that the browser call a specified function\n        // to update an animation before the next repaint\n        this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n    };\n\n    handleWindowResize = () => {\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n\n        this.renderer.setSize( width, height );\n        this.camera.aspect = width / height;\n\n        // Note that after making changes to most of camera properties you have to call\n        // .updateProjectionMatrix for the changes to take effect.\n        this.camera.updateProjectionMatrix();\n    };\n\n    render() {\n        return <div style={style} ref={ref => (this.mount = ref)} />;\n    }\n}","import { Engine, Scene } from '@babylonjs/core';\nimport React, { useEffect, useRef } from 'react';\n\nexport default (props) => {\n    const reactCanvas = useRef(null);\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, \n        onRender, onSceneReady, ...rest } = props;\n    \n    useEffect(() =>{\n        if(reactCanvas.current){\n            const engine = new Engine(reactCanvas.current, antialias,\n                engineOptions, adaptToDeviceRatio);\n            engine.resize();\n            const scene = new Scene(engine, sceneOptions);\n            if(scene.isReady()){\n                props.onSceneReady(scene)\n            }\n            else{\n                scene.onReadyObservable.addOnce(scene => props.\n                    onSceneReady(scene));\n            }\n            engine.runRenderLoop(() => {\n                if(typeof onRender === 'function'){\n                    onRender(scene);\n                }\n                scene.render();\n            })\n\n            const resize = () =>{\n                scene.getEngine().resize();\n            }\n\n            if(window){\n                window.addEventListener('resize', resize);\n            }\n            return () =>{\n                scene.getEngine().dispose();\n                if(window){\n                    window.removeEventListener('resize', resize);\n                }\n            }\n        }\n    }, [reactCanvas])\n\n    return(\n        \n        <canvas \n        \n        width={window.innerWidth} \n        height={window.innerHeight} \n        ref={reactCanvas} {...rest} />\n        \n    )\n\n}","import React from 'react';\nimport { \n    Color3,\n    Vector3, \n    Mesh,\n    PhysicsImpostor,\n    StandardMaterial,\n    } from '@babylonjs/core';\nimport { \n    AdvancedDynamicTexture,\n    Button,\n    Control,\n    SelectionPanel,\n    InputText,\n    TextBlock,\n    Rectangle,\n    } from \"@babylonjs/gui\";\nimport * as CANNON from 'cannon';\nwindow.CANNON = CANNON;\n\n\nexport default (scene) =>{\n\n  var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n  \n  var material = new StandardMaterial(scene);\n  material.diffuseColor = new Color3(1.0, 0, 0);\n\n  var velocity = 5;\n\n  \n  function play(){\n    \n    var rect1 = new Rectangle();\n    rect1.width = 0.1;\n    rect1.height = \"20px\";\n    rect1.cornerRadius = 20;\n    rect1.color = \"red\";\n    rect1.thickness = 1;\n    rect1.background = \"white\";\n    advancedTexture.addControl(rect1);\n    \n    rect1.linkOffsetY = -50;\n\n    var rect2 = new Rectangle();\n    rect2.width = 0.1;\n    rect2.height = \"20px\";\n    rect2.cornerRadius = 20;\n    rect2.color = \"red\";\n    rect2.thickness = 1;\n    rect2.background = \"white\";\n    advancedTexture.addControl(rect2);\n    \n    rect2.linkOffsetY = -50;\n\n    \n    var sphere1 = Mesh.CreateSphere(\"sphere1\", 16, 1, scene);\n    sphere1.material = material;\n    sphere1.position = new Vector3(-2, 2, 0);\n    sphere1.color = new Color3(1, 0, 0);\n    sphere1.physicsImpostor = new PhysicsImpostor(sphere1, PhysicsImpostor.SphereImpostor,\n      {mass:1, restitution: .95, friction:0}, scene);\n    sphere1.physicsImpostor.setLinearVelocity(new Vector3(velocity, 0, 0));\n    \n    rect1.linkWithMesh(sphere1);   \n    var label1 = new TextBlock();\n    label1.text = sphere1.physicsImpostor.getLinearVelocity()._x +' m/s';\n    rect1.addControl(label1)\n\n    var sphere2 = Mesh.CreateSphere(\"sphere1\", 16, 1, scene);\n    sphere2.position = new Vector3(2, 2, 0);\n    sphere2.physicsImpostor = new PhysicsImpostor(sphere2, PhysicsImpostor.SphereImpostor,\n      {mass:1, restitution: .95, friction:0}, scene);\n\n    rect2.linkWithMesh(sphere2);   \n    var label2 = new TextBlock();\n    \n    label2.text = sphere2.physicsImpostor.getLinearVelocity()._x +' m/s';    \n    rect2.addControl(label2);\n\n    var t = window.setInterval(timer, 1000);\n    function timer(){\n      label2.text = sphere2.physicsImpostor.getLinearVelocity()._x.toFixed(2) +' m/s';\n      label1.text = sphere1.physicsImpostor.getLinearVelocity()._x.toFixed(2) +' m/s';\n    };\n\n    \n    \n  }\n  var act = true;\n  var menuButton = new Button.CreateSimpleButton(\"menu\", \"Start\");\n  menuButton.color = \"black\";\n  menuButton.width = 1;\n  menuButton.height = \"40px\";\n  menuButton.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n  menuButton.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n  \n  \n  menuButton.onPointerDownObservable.add(function(){\n    if(act === true){\n      play();\n      act = false;\n      ;}\n    else{\n      play();\n      act = true;\n    }\n    \n  })\n  \n  var input = new InputText(\"Enter\");\n  input.width = 1;\n  input.text = \"Enter velocity\";\n  input.height = \"40px\";\n  input.background = \"black\";\n  input.color = \"white\";\n  input.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n  input.onPointerDownObservable.add(function(){\n    input.text = \"\";\n  })\n  input.onTextChangedObservable.add(function(){\n    velocity = input.text;\n  })\n  scene.enablePhysics();\n\n  var displayGrid = new SelectionPanel(\"sp\", []);\n    displayGrid.color = \"black\";  \n    displayGrid.width = \"150px\";\n    displayGrid.height = \"100px\";\n    displayGrid.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    displayGrid.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    displayGrid.top = \"60px\";\n    displayGrid.left = \"80px\";\n\n    advancedTexture.addControl(displayGrid);\n    displayGrid.addControl(menuButton)\n    displayGrid.addControl(input);\n}","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    Color3, \n    HemisphericLight,\n    MeshBuilder,\n    Mesh,\n    Texture,\n    BackgroundMaterial, \n    PhysicsImpostor,\n    CannonJSPlugin,\n    } from '@babylonjs/core';\nimport { Button,\n      } from \"@babylonjs/gui\";\nimport { GridMaterial } from \"@babylonjs/materials/grid\";\nimport SceneComponent from '../sceneComponent';\nimport Menu from './menu';\nimport * as CANNON from 'cannon';\nimport Collision from './collision';\nwindow.CANNON = CANNON;\n\nconst onSceneReady = scene =>{\n    var camera = new ArcRotateCamera(\"ArcRotateCamera\", 4.7, 1.2, 12, \n        new Vector3(0, 0, 0), scene);\n    camera.setTarget(Vector3.Zero());\n    const light = new HemisphericLight(\"light\", new Vector3(1, 1, 0));\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var gravityVector = new Vector3(0, 0, 0);\n    scene.enablePhysics(gravityVector);\n    \n      \n    var skyMaterial = new GridMaterial(\"skyMaterial\", scene);\n      skyMaterial.majorUnitFrequency = 6;\n      skyMaterial.minorUnitVisibility = 0.43;\n      skyMaterial.gridRatio = 0.5;\n      skyMaterial.mainColor = new Color3(1, 1, 1);\n      skyMaterial.lineColor = new Color3(0, 1.0, 1.0);\t\n      skyMaterial.backFaceCulling = false;\n\n    var skySphere = Mesh.CreateSphere(\"skySphere\", 30, 90, scene);\n      skySphere.material = skyMaterial;\n\n    var ground = MeshBuilder.CreateGround(\"ground1\", {width:6, height:6}, scene);\n    var backgroundMaterial = new BackgroundMaterial(\"backgroundMaterial\", scene);\n    backgroundMaterial.diffuseTexture = new Texture(process.env.PUBLIC_URL + '/assets/osu.png', scene);\n    ground.material = backgroundMaterial;\n    //ground.physicsImpostor = new PhysicsImpostor(ground, PhysicsImpostor.BoxImpostor, { mass: 0, restitution: 0.9 }, scene);\n    \n\n    //Menu();\n    Collision(scene);\n\n}\n\n\nexport default () => (\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n)","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    HemisphericLight, \n    MeshBuilder,\n    DynamicTexture,\n    Mesh,\n    StandardMaterial,\n    Plane,\n    Color3, \n    } from '@babylonjs/core';\nimport { GridMaterial } from \"@babylonjs/materials/grid\";\nimport { AdvancedDynamicTexture, Slider, Control } from \"@babylonjs/gui\";\nimport SceneComponent from './sceneComponent';\n\n\nvar gridGen =(props)=>{\n    var {scene, psize} = props;\n    var grid = new GridMaterial(\"grid\", scene);\t\n    grid.gridRatio = 1;\n    grid.opacity = 0.99;\n    grid.lineColor = Color3.Gray();\n\n    const xPlane = Plane.FromPositionAndNormal(new Vector3(0, 0, 0), new Vector3(1, 0, 0));\n    const yPlane = Plane.FromPositionAndNormal(new Vector3(0, 0, 0), new Vector3(0, 1, 0));\n    const zPlane = Plane.FromPositionAndNormal(new Vector3(0, 0, 0), new Vector3(0, 0, 1));\n    var planex = MeshBuilder.CreatePlane(\"planex\", {size: psize, sourcePlane: xPlane, sideOrientation: Mesh.DOUBLESIDE});\n    var planey = MeshBuilder.CreatePlane(\"planey\", {size: psize, sourcePlane: yPlane, sideOrientation: Mesh.DOUBLESIDE});\n    var planez = MeshBuilder.CreatePlane(\"planez\", {size: psize, sourcePlane: zPlane, sideOrientation: Mesh.DOUBLESIDE});\n    \n    planex.material = grid;\n    planey.material = grid;\n    planez.material = grid;\n    return [planex, planey, planez, grid];\n}\n\nconst onSceneReady = scene =>{\n    var camera = new ArcRotateCamera(\"Camera\", 3 * Math.PI / 2, \n        3 * Math.PI / 8, 30, Vector3.Zero());\n    scene.clearColor = Color3.White();\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var light = new HemisphericLight(\"light\", new Vector3(0,1,0), scene);\n    light.intensity = 0.7;\n\n    \n    var psize = 1; \n\n    var showAxis = function(size) {\n    var makeTextPlane = function(text, color, size) {\n    var dynamicTexture = new DynamicTexture(\"DynamicTexture\", 50, scene, true);\n    dynamicTexture.hasAlpha = true;\n    dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color , \"transparent\", true);\n    var plane = new Mesh.CreatePlane(\"TextPlane\", size, scene, true);\n    plane.material = new StandardMaterial(\"TextPlaneMaterial\", scene);\n    plane.material.backFaceCulling = false;\n    plane.material.specularColor = new Color3(0, 0, 0);\n    plane.material.diffuseTexture = dynamicTexture;\n    return plane;\n     };\n\n     \n  \n    var axisX = Mesh.CreateLines(\"axisX\", [ \n      new Vector3.Zero(), new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0), \n      new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)\n      ], scene);\n    axisX.color = new Color3(1, 0, 0);\n    var xChar = makeTextPlane(\"X\", \"red\", size / 5);\n    xChar.position = new Vector3(0.9 * size, 0.1 * size, 0);\n    var axisY = Mesh.CreateLines(\"axisY\", [\n        new Vector3.Zero(), new Vector3(0, size, 0), new Vector3( -0.05 * size, size * 0.95, 0), \n        new Vector3(0, size, 0), new Vector3( 0.05 * size, size * 0.95, 0)\n        ], scene);\n    axisY.color = new Color3(0, 1, 0);\n    var yChar = makeTextPlane(\"U\", \"green\", size / 5);\n    yChar.position = new Vector3(0, 0.9 * size, 0.1 * size);\n    var axisZ = Mesh.CreateLines(\"axisZ\", [\n        new Vector3.Zero(), new Vector3(0, 0, size), new Vector3( 0 , -0.05 * size, size * 0.95),\n        new Vector3(0, 0, size), new Vector3( 0, 0.05 * size, size * 0.95)\n        ], scene);\n    axisZ.color = new Color3(0, 0, 1);\n    var zChar = makeTextPlane(\"T\", \"blue\", size / 5);\n    zChar.position = new Vector3(size, 0.05 * size, 0.9 * size);\n\n    var planes = gridGen({scene, psize});\n    var planex = planes[0];\n    var planey = planes[1];\n    var planez = planes[2];\n    var grid = planes[3];\n\n    var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\", true, scene);\n    var slider = new Slider();\n        slider.minimum = 1;\n        slider.maximum = 100;\n        slider.value = 1;\n        slider.height = \"20px\";\n        slider.width = \"200px\";\n        slider.color = \"#003399\";\n        slider.background = \"grey\";\n        slider.top= \"20px\";\n        slider.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        slider.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        slider.onValueChangedObservable.add(function (value) {\n            axisX.scaling.x = value/2;\n            axisY.scaling.y = value/2;\n            axisZ.scaling.z = value/2;\n            grid.gridRatio = 1/value;\n            planex.scaling.x = value;\n            planex.scaling.y = value;\n            planey.scaling.y = value;\n            planey.scaling.x = value;\n            planez.scaling.y = value;\n            planez.scaling.x = value;\n            planex.position.z =value/2;\n            planey.position.z = value/2\n            planez.position.z = value;\n            xChar.scaling.x = value/2;\n            xChar.scaling.y = value/2;\n            xChar.position.x = value/2;\n            yChar.scaling.x = value/2;\n            yChar.scaling.y = value/2;\n            yChar.position.y = value/2;\n            zChar.scaling.x = value/2;\n            zChar.scaling.y = value/2;\n            zChar.position.x = value/1.85;\n            zChar.position.z = value;        \n            \n            \n        });\n    \n    advancedTexture.addControl(slider);   \n    \n  };\n  showAxis(psize);\n  \n\n  \n  \n\n}\n\n\n\n\nexport default function Grid () {\n    return(\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n    )\n}","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    HemisphericLight, \n    SceneLoader,\n    Color3, \n    \n    } from '@babylonjs/core';\nimport SceneComponent from './sceneComponent';\nimport { GLTFFileLoader } from 'babylonjs-loaders';\n\n\nconst onSceneReady = scene =>{\n    var camera = new ArcRotateCamera(\"Camera\", 3 * Math.PI / 2, \n        3 * Math.PI / 8, 30, Vector3.Zero());\n    scene.clearColor = Color3.White();\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var light = new HemisphericLight(\"light\", new Vector3(0,1,0), scene);\n    light.intensity = 0.7;\n\n    \n    SceneLoader.RegisterPlugin(new GLTFFileLoader());\n    GLTFFileLoader.IncrementalLoading = false;\n    \n    \n   SceneLoader.Append(process.env.PUBLIC_URL + '/assets/', \"sol.glb\" , scene, function (scene) {\n      \n      scene.createDefaultCameraOrLight(true, true, true);\n\n      scene.activeCamera.alpha += Math.PI;\n    \n  });\n  \n\n  \n  \n\n}\n\n\n\n\nexport default function Grid () {\n    return(\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/atom.1651bc53.svg\";","export default __webpack_public_path__ + \"static/media/babylon_gray2.a3cbb95f.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\n//import Home from '../home/home';\nimport ThreeApp from '../three_app/threeApp';\nimport PhysicsWorld from '../babylon/physworld/physworld';\n//import BabylonApp from '../babylon/particleSun';\n//import Grid from '../babylon/grid';\nimport DynamicGrid from '../babylon/dynamicGrid';\nimport GLB from '../babylon/glbLoader';\nimport Atom from '../../img/atom.svg';\nimport BabylonIcon from '../../img/babylon_gray2.svg';\n\nimport {\n    //BrowserRouter as Router,\n    Switch,\n    Route,\n    Link, \n    HashRouter,\n  } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    backgroundColor: 'black',\n    elevation: 0,\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    overflow: \"hidden\",\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <HashRouter>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <Link to=\"/phyworx\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Home'>          \n          <ListItemIcon>\n              <HomeIcon />\n          </ListItemIcon>\n          <ListItemText >Home</ListItemText>          \n        </ListItem>\n        </Link>\n        <Link to=\"/phyworx/babylon\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Babylon' >        \n          <ListItemIcon >\n              <img src={ BabylonIcon } alt=\"babylonicon\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText >Babylon</ListItemText>        \n        </ListItem>\n        </Link>\n        <Divider />\n        <Link to=\"/phyworx/physims\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Three'>        \n          <ListItemIcon>\n              <img src={ Atom } alt=\"atomicon\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText >Physic Sims</ListItemText>        \n        </ListItem>\n        </Link>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n            <Route exact path=\"/phyworx\" >\n            <DynamicGrid />\n            </Route>      \n            <Route path=\"/phyworx/babylon\" >\n              <GLB />\n            </Route> \n            <Route path=\"/phyworx/physims\" >\n              <PhysicsWorld />\n            </Route>        \n        </Switch>\n        <Typography paragraph>          \n        </Typography>\n      </main>\n      </HashRouter>\n    </div>\n  );\n}\n","import './App.css';\n\n\nimport Header from \"./components/header/header\";\n\n\nconst contStyle = {\n  backgroundColor: \"#000\",\n  margin: 0,\n  height: \"100%\",\n  overflow: \"hidden\",\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}