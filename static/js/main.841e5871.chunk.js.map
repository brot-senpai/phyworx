{"version":3,"sources":["img/bread.svg","components/home/home.js","components/three_app/box.js","components/three_app/threeApp.js","components/babylon/sceneComponent.jsx","components/babylon/dynamicGrid.js","img/atom.svg","img/babylon_gray2.svg","components/header/header.js","App.js","reportWebVitals.js","index.js"],"names":["Home","style","height","width","App","sceneSetup","mount","clientWidth","clientHeight","scene","THREE","camera","position","z","controls","OrbitControls","renderer","setSize","appendChild","domElement","addCustomSceneObjects","geometry","material","color","emissive","side","flatShading","cube","add","lights","set","startAnimationLoop","rotation","x","y","render","requestID","window","requestAnimationFrame","handleWindowResize","aspect","updateProjectionMatrix","this","addEventListener","removeEventListener","cancelAnimationFrame","dispose","ref","Component","divStyle","ThreeApp","props","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","useEffect","current","engine","Engine","Scene","isReady","onReadyObservable","addOnce","runRenderLoop","resize","getEngine","ArcRotateCamera","Math","PI","Vector3","Zero","clearColor","Color3","Black","canvas","getRenderingCanvas","attachControl","HemisphericLight","intensity","grid","GridMaterial","gridRatio","xPlane","Plane","FromPositionAndNormal","yPlane","zPlane","planex","MeshBuilder","CreatePlane","size","sourcePlane","sideOrientation","Mesh","DOUBLESIDE","planey","planez","makeTextPlane","text","dynamicTexture","DynamicTexture","hasAlpha","drawText","plane","StandardMaterial","backFaceCulling","specularColor","diffuseTexture","axisX","CreateLines","xChar","axisY","yChar","axisZ","zChar","advancedTexture","AdvancedDynamicTexture","CreateFullscreenUI","slider","Slider","minimum","maximum","value","background","left","horizontalAlignment","Control","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_TOP","onValueChangedObservable","scaling","addControl","showAxis","Grid","id","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","backgroundColor","elevation","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","clsx","Toolbar","IconButton","aria-label","onClick","edge","Drawer","variant","paper","direction","Divider","to","textDecoration","ListItem","button","ListItemIcon","ListItemText","src","BabylonIcon","alt","Atom","exact","path","Typography","paragraph","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.841e5871.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bread.8b88b577.svg\";","import React from \"react\";\nimport logo from '../../img/bread.svg';\n\nconst imgStyle = {\n    color: \"#000000\",\n    width: \"100%\",\n    height: \"20em\",\n    WebkitFilter: \"invert(100%)\",\n    filter: \"invert(100%)\"\n    \n}\n\nfunction Home(props) {\n    return(\n        <div >\n            <img src={logo} alt=\"brot-senpai\" style={imgStyle}/>\n        </div>\n    )\n}\n\nexport default Home;","\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as THREE from 'three';\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\n\nconst style = {\n    height: 500, // we can control scene size by setting container dimensions\n    width: 600\n};\n\nexport default class App extends Component {\n    componentDidMount() {\n        this.sceneSetup();\n        this.addCustomSceneObjects();\n        this.startAnimationLoop();\n        window.addEventListener('resize', this.handleWindowResize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowResize);\n        window.cancelAnimationFrame(this.requestID);\n        this.controls.dispose();\n    }\n\n    // Standard scene setup in Three.js. Check \"Creating a scene\" manual for more information\n    // https://threejs.org/docs/#manual/en/introduction/Creating-a-scene\n    sceneSetup = () => {\n        // get container dimensions and use them for scene sizing\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n\n        this.scene = new THREE.Scene();\n        this.camera = new THREE.PerspectiveCamera(\n            75, // fov = field of view\n            width / height, // aspect ratio\n            0.1, // near plane\n            1000 // far plane\n        );\n        this.camera.position.z = 9; // is used here to set some distance from a cube that is located at z = 0\n        // OrbitControls allow a camera to orbit around the object\n        // https://threejs.org/docs/#examples/controls/OrbitControls\n        this.controls = new OrbitControls( this.camera, this.mount );\n        this.renderer = new THREE.WebGLRenderer();\n        this.renderer.setSize( width, height );\n        this.mount.appendChild( this.renderer.domElement ); // mount using React ref\n    };\n\n    // Here should come custom code.\n    // Code below is taken from Three.js BoxGeometry example\n    // https://threejs.org/docs/#api/en/geometries/BoxGeometry\n    addCustomSceneObjects = () => {\n        const geometry = new THREE.BoxGeometry(2, 2, 2);\n        const material = new THREE.MeshPhongMaterial( {\n            color: 0x156289,\n            emissive: 0x072534,\n            side: THREE.DoubleSide,\n            flatShading: true\n        } );\n        this.cube = new THREE.Mesh( geometry, material );\n        this.scene.add( this.cube );\n\n        const lights = [];\n        lights[ 0 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n        lights[ 1 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n        lights[ 2 ] = new THREE.PointLight( 0xffffff, 1, 0 );\n\n        lights[ 0 ].position.set( 0, 200, 0 );\n        lights[ 1 ].position.set( 100, 200, 100 );\n        lights[ 2 ].position.set( - 100, - 200, - 100 );\n\n        this.scene.add( lights[ 0 ] );\n        this.scene.add( lights[ 1 ] );\n        this.scene.add( lights[ 2 ] );\n    };\n\n    startAnimationLoop = () => {\n        this.cube.rotation.x += 0.01;\n        this.cube.rotation.y += 0.01;\n\n        this.renderer.render( this.scene, this.camera );\n\n        // The window.requestAnimationFrame() method tells the browser that you wish to perform\n        // an animation and requests that the browser call a specified function\n        // to update an animation before the next repaint\n        this.requestID = window.requestAnimationFrame(this.startAnimationLoop);\n    };\n\n    handleWindowResize = () => {\n        const width = this.mount.clientWidth;\n        const height = this.mount.clientHeight;\n\n        this.renderer.setSize( width, height );\n        this.camera.aspect = width / height;\n\n        // Note that after making changes to most of camera properties you have to call\n        // .updateProjectionMatrix for the changes to take effect.\n        this.camera.updateProjectionMatrix();\n    };\n\n    render() {\n        return <div style={style} ref={ref => (this.mount = ref)} />;\n    }\n}","import React from \"react\";\n\nimport Box from './box';\n//import Physics from './physics';\n//import Gestures from './gestures';\n\nconst divStyle = {\n    width: 600,\n    height: 500\n}\n\nconst ThreeApp = () => {\n    \n    return(\n        <div style={divStyle}>\n            <Box />\n        </div>\n    )\n}\n\nexport default ThreeApp;","import { Engine, Scene } from '@babylonjs/core';\nimport React, { useEffect, useRef } from 'react';\n\nexport default (props) => {\n    const reactCanvas = useRef(null);\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, \n        onRender, onSceneReady, ...rest } = props;\n    \n    useEffect(() =>{\n        if(reactCanvas.current){\n            const engine = new Engine(reactCanvas.current, antialias,\n                engineOptions, adaptToDeviceRatio);\n            const scene = new Scene(engine, sceneOptions);\n            if(scene.isReady()){\n                props.onSceneReady(scene)\n            }\n            else{\n                scene.onReadyObservable.addOnce(scene => props.\n                    onSceneReady(scene));\n            }\n            engine.runRenderLoop(() => {\n                if(typeof onRender === 'function'){\n                    onRender(scene);\n                }\n                scene.render();\n            })\n\n            const resize = () =>{\n                scene.getEngine().resize();\n            }\n\n            if(window){\n                window.addEventListener('resize', resize);\n            }\n            return () =>{\n                scene.getEngine().dispose();\n                if(window){\n                    window.removeEventListener('resize', resize);\n                }\n            }\n        }\n    }, [reactCanvas])\n\n    return(\n        <canvas width=\"400\" height=\"600\"ref={reactCanvas} {...rest} />\n    )\n\n}","import React from 'react';\nimport { ArcRotateCamera, \n    Vector3, \n    HemisphericLight, \n    MeshBuilder,\n    DynamicTexture,\n    Mesh,\n    StandardMaterial,\n    Plane,\n    Color3, \n    } from '@babylonjs/core';\nimport { GridMaterial } from \"@babylonjs/materials/grid\";\nimport { AdvancedDynamicTexture, Slider, Control } from \"@babylonjs/gui\";\nimport SceneComponent from './sceneComponent';\n\n\nconst onSceneReady = scene =>{\n    var camera = new ArcRotateCamera(\"Camera\", 3 * Math.PI / 2, \n        3 * Math.PI / 8, 30, Vector3.Zero());\n    scene.clearColor = Color3.Black();\n    const canvas = scene.getEngine().getRenderingCanvas();\n    camera.attachControl(canvas, true);\n    var light = new HemisphericLight(\"light\", new Vector3(0,1,0), scene);\n    light.intensity = 0.7;\n\n    var grid = new GridMaterial(\"grid\", scene);\t\n    grid.gridRatio = 1;\n\n    var psize = 1;\n\n    const xPlane = Plane.FromPositionAndNormal(new Vector3(0, 0, 0), new Vector3(1, 0, 0));\n    const yPlane = Plane.FromPositionAndNormal(new Vector3(0, 0, 0), new Vector3(0, 1, 0));\n    const zPlane = Plane.FromPositionAndNormal(new Vector3(0, 0, 0), new Vector3(0, 0, 1));\n    var planex = MeshBuilder.CreatePlane(\"planex\", {size: psize, sourcePlane: xPlane, sideOrientation: Mesh.DOUBLESIDE});\n    var planey = MeshBuilder.CreatePlane(\"planey\", {size: psize, sourcePlane: yPlane, sideOrientation: Mesh.DOUBLESIDE});\n    var planez = MeshBuilder.CreatePlane(\"planez\", {size: psize, sourcePlane: zPlane, sideOrientation: Mesh.DOUBLESIDE});\n    \n    planex.material = grid;\n    planey.material = grid;\n    planez.material = grid;\n    \n    \n\n    var showAxis = function(size) {\n    var makeTextPlane = function(text, color, size) {\n    var dynamicTexture = new DynamicTexture(\"DynamicTexture\", 50, scene, true);\n    dynamicTexture.hasAlpha = true;\n    dynamicTexture.drawText(text, 5, 40, \"bold 36px Arial\", color , \"transparent\", true);\n    var plane = new Mesh.CreatePlane(\"TextPlane\", size, scene, true);\n    plane.material = new StandardMaterial(\"TextPlaneMaterial\", scene);\n    plane.material.backFaceCulling = false;\n    plane.material.specularColor = new Color3(0, 0, 0);\n    plane.material.diffuseTexture = dynamicTexture;\n    return plane;\n     };\n\n     \n  \n    var axisX = Mesh.CreateLines(\"axisX\", [ \n      new Vector3.Zero(), new Vector3(size, 0, 0), new Vector3(size * 0.95, 0.05 * size, 0), \n      new Vector3(size, 0, 0), new Vector3(size * 0.95, -0.05 * size, 0)\n      ], scene);\n    axisX.color = new Color3(1, 0, 0);\n    var xChar = makeTextPlane(\"X\", \"red\", size / 5);\n    xChar.position = new Vector3(0.9 * size, 0.1 * size, 0);\n    var axisY = Mesh.CreateLines(\"axisY\", [\n        new Vector3.Zero(), new Vector3(0, size, 0), new Vector3( -0.05 * size, size * 0.95, 0), \n        new Vector3(0, size, 0), new Vector3( 0.05 * size, size * 0.95, 0)\n        ], scene);\n    axisY.color = new Color3(0, 1, 0);\n    var yChar = makeTextPlane(\"Y\", \"green\", size / 5);\n    yChar.position = new Vector3(0, 0.9 * size, 0.1 * size);\n    var axisZ = Mesh.CreateLines(\"axisZ\", [\n        new Vector3.Zero(), new Vector3(0, 0, size), new Vector3( 0 , -0.05 * size, size * 0.95),\n        new Vector3(0, 0, size), new Vector3( 0, 0.05 * size, size * 0.95)\n        ], scene);\n    axisZ.color = new Color3(0, 0, 1);\n    var zChar = makeTextPlane(\"Z\", \"blue\", size / 5);\n    zChar.position = new Vector3(size, 0.05 * size, 0.9 * size);\n\n    \n\n    var advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\", true, scene);\n    var slider = new Slider();\n        slider.minimum = 5;\n        slider.maximum = 100;\n        slider.value = 5;\n        slider.height = \"20px\";\n        slider.width = \"200px\";\n        slider.color = \"#003399\";\n        slider.background = \"grey\";\n        slider.left = \"20px\";\n        slider.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        slider.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        slider.onValueChangedObservable.add(function (value) {\n            axisX.scaling.x = value/2;\n            axisY.scaling.y = value/2;\n            axisZ.scaling.z = value/2;\n            grid.gridRatio = 1/value;\n            planex.scaling.x = value;\n            planex.scaling.y = value;\n            planey.scaling.y = value;\n            planey.scaling.x = value;\n            planez.scaling.y = value;\n            planez.scaling.x = value;\n            planex.position.z =value/2;\n            planey.position.z = value/2\n            planez.position.z = value;\n            xChar.scaling.x = value/2;\n            xChar.scaling.y = value/2;\n            xChar.position.x = value/2;\n            yChar.scaling.x = value/2;\n            yChar.scaling.y = value/2;\n            yChar.position.y = value/2;\n            zChar.scaling.x = value/2;\n            zChar.scaling.y = value/2;\n            zChar.position.x = value/1.85;\n            zChar.position.z = value;           \n            \n            \n        });\n    \n    advancedTexture.addControl(slider);  \n    \n  };\n  showAxis(psize);\n  \n\n  \n  \n\n}\n\n\n\n\nexport default function Grid () {\n    return(\n    <div>\n        <SceneComponent antialias onSceneReady={onSceneReady}\n        id='my-canvas' />\n    </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/atom.1651bc53.svg\";","export default __webpack_public_path__ + \"static/media/babylon_gray2.a3cbb95f.svg\";","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\n\nimport Home from '../home/home';\nimport ThreeApp from '../three_app/threeApp';\nimport BabylonApp from '../babylon/particleSun';\nimport Grid from '../babylon/grid';\nimport DynamicGrid from '../babylon/dynamicGrid';\nimport Atom from '../../img/atom.svg';\nimport BabylonIcon from '../../img/babylon_gray2.svg';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link, \n  } from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    backgroundColor: 'black',\n    elevation: 0,\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Router>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <Link to=\"/phyworx\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Home'>          \n          <ListItemIcon>\n              <HomeIcon />\n          </ListItemIcon>\n          <ListItemText >Home</ListItemText>          \n        </ListItem>\n        </Link>\n        <Link to=\"/phyworx/babylon\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Babylon' >        \n          <ListItemIcon >\n              <img src={ BabylonIcon } alt=\"babylonicon\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText >Babylon</ListItemText>        \n        </ListItem>\n        </Link>\n        <Divider />\n        <Link to=\"/phyworx/three\" style={{ textDecoration: 'none' }}>\n        <ListItem button key='Three'>        \n          <ListItemIcon>\n              <img src={ Atom } alt=\"atomicon\" height=\"25\"/>\n          </ListItemIcon>\n          <ListItemText >WebGL</ListItemText>        \n        </ListItem>\n        </Link>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n            <Route exact path=\"/phyworx\" >\n            <DynamicGrid />\n            </Route>      \n            <Route path=\"/phyworx/babylon\" >\n              <DynamicGrid />\n            </Route> \n            <Route path=\"/phyworx/three\" >\n              <ThreeApp />\n            </Route>        \n        </Switch>\n        <Typography paragraph>          \n        </Typography>\n      </main>\n      </Router>\n    </div>\n  );\n}\n","import './App.css';\n\n\nimport Header from \"./components/header/header\";\n\n\nconst contStyle = {\n  backgroundColor: \"#000\",\n  width: \"100%\",\n  height: \"100%\"\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Header />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}